//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from php.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


    using System;
    using System.Text;
    using System.Collections.Generic;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IphpListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class phpBaseListener : IphpListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.phpDoc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPhpDoc([NotNull] phpParser.PhpDocContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.phpDoc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPhpDoc([NotNull] phpParser.PhpDocContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] phpParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] phpParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.varDump"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDump([NotNull] phpParser.VarDumpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.varDump"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDump([NotNull] phpParser.VarDumpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.varDumpArgHelp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDumpArgHelp([NotNull] phpParser.VarDumpArgHelpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.varDumpArgHelp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDumpArgHelp([NotNull] phpParser.VarDumpArgHelpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.varDumpArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDumpArg([NotNull] phpParser.VarDumpArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.varDumpArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDumpArg([NotNull] phpParser.VarDumpArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.echoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEchoStatement([NotNull] phpParser.EchoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.echoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEchoStatement([NotNull] phpParser.EchoStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.echoArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEchoArgument([NotNull] phpParser.EchoArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.echoArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEchoArgument([NotNull] phpParser.EchoArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] phpParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] phpParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] phpParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] phpParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean([NotNull] phpParser.BooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean([NotNull] phpParser.BooleanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.varName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarName([NotNull] phpParser.VarNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.varName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarName([NotNull] phpParser.VarNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.functionDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDec([NotNull] phpParser.FunctionDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.functionDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDec([NotNull] phpParser.FunctionDecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] phpParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] phpParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.parameterVar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterVar([NotNull] phpParser.ParameterVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.parameterVar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterVar([NotNull] phpParser.ParameterVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBody([NotNull] phpParser.FunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBody([NotNull] phpParser.FunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.functionBodystatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBodystatements([NotNull] phpParser.FunctionBodystatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.functionBodystatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBodystatements([NotNull] phpParser.FunctionBodystatementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] phpParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] phpParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.functionName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionName([NotNull] phpParser.FunctionNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.functionName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionName([NotNull] phpParser.FunctionNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentList([NotNull] phpParser.ArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentList([NotNull] phpParser.ArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] phpParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] phpParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] phpParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] phpParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.ifStatemetDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatemetDefault([NotNull] phpParser.IfStatemetDefaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.ifStatemetDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatemetDefault([NotNull] phpParser.IfStatemetDefaultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.elseifDefaultStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseifDefaultStatement([NotNull] phpParser.ElseifDefaultStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.elseifDefaultStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseifDefaultStatement([NotNull] phpParser.ElseifDefaultStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.elseDefaultStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseDefaultStatement([NotNull] phpParser.ElseDefaultStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.elseDefaultStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseDefaultStatement([NotNull] phpParser.ElseDefaultStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.ifStatementAlternate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatementAlternate([NotNull] phpParser.IfStatementAlternateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.ifStatementAlternate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatementAlternate([NotNull] phpParser.IfStatementAlternateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.elseifAlternateStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseifAlternateStatement([NotNull] phpParser.ElseifAlternateStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.elseifAlternateStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseifAlternateStatement([NotNull] phpParser.ElseifAlternateStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.elseAlternateStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseAlternateStatement([NotNull] phpParser.ElseAlternateStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.elseAlternateStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseAlternateStatement([NotNull] phpParser.ElseAlternateStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.conditionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionBody([NotNull] phpParser.ConditionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.conditionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionBody([NotNull] phpParser.ConditionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] phpParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] phpParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis([NotNull] phpParser.ParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis([NotNull] phpParser.ParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] phpParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] phpParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.comparision"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparision([NotNull] phpParser.ComparisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.comparision"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparision([NotNull] phpParser.ComparisionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.add"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd([NotNull] phpParser.AddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.add"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd([NotNull] phpParser.AddContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.mult"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMult([NotNull] phpParser.MultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.mult"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMult([NotNull] phpParser.MultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.nLRE"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNLRE([NotNull] phpParser.NLREContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.nLRE"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNLRE([NotNull] phpParser.NLREContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.switchStatementDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatementDefault([NotNull] phpParser.SwitchStatementDefaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.switchStatementDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatementDefault([NotNull] phpParser.SwitchStatementDefaultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.switchStatementAlternate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatementAlternate([NotNull] phpParser.SwitchStatementAlternateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.switchStatementAlternate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatementAlternate([NotNull] phpParser.SwitchStatementAlternateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.switchBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchBlock([NotNull] phpParser.SwitchBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.switchBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchBlock([NotNull] phpParser.SwitchBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.switchCases"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCases([NotNull] phpParser.SwitchCasesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.switchCases"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCases([NotNull] phpParser.SwitchCasesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.switchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCase([NotNull] phpParser.SwitchCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.switchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCase([NotNull] phpParser.SwitchCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.addAction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddAction([NotNull] phpParser.AddActionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.addAction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddAction([NotNull] phpParser.AddActionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.multAction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultAction([NotNull] phpParser.MultActionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.multAction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultAction([NotNull] phpParser.MultActionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.action"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAction([NotNull] phpParser.ActionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.action"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAction([NotNull] phpParser.ActionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="phpParser.compare"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompare([NotNull] phpParser.CompareContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="phpParser.compare"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompare([NotNull] phpParser.CompareContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
